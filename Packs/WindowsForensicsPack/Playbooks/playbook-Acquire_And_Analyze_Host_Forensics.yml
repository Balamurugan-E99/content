contentitemexportablefields:
  contentitemfields:
    propagationLabels:
    - all
description: This playbook allows both the gathering of forensic data from a host
  and the analysis of the acquired data by using the relevant forensics automations.
id: Acquire And Analyze Host Forensics
inputs: []
name: Acquire And Analyze Host Forensics
outputs: []
starttaskid: "0"
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "1"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: f3d8ffba-8c7a-4ab0-8c2d-c97699634359
      iscommand: false
      name: ""
      version: -1
      description: ''
    taskid: f3d8ffba-8c7a-4ab0-8c2d-c97699634359
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
  "1":
    id: "1"
    taskid: e31fb2e3-3dc8-4099-8e7e-2bf07e1f3e52
    type: playbook
    task:
      id: e31fb2e3-3dc8-4099-8e7e-2bf07e1f3e52
      version: -1
      name: PS-Remote  Acquire Host Forensics
      description: This playbook allows the user to gather multiple forensic data
        from a windows endpoint. Including network traffic, MFT (Master File Table)
        or registry export by using the PS remote automation which enables to connect
        to a windows host without the need to install any 3rd party tools using just
        native Windows management tools.
      playbookName: PS-Remote  Acquire Host Forensics
      playbookId: PS-Remote  Acquire Host Forensics
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      GetMft:
        simple: "true"
      GetNetworkTraffic:
        simple: "true"
      GetRegistry:
        simple: "true"
      Host:
        simple: ${inputs.Host}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 450,
          "y": 230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "2":
    id: "2"
    ignoreworker: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 194aaf0f-782c-41fc-84d8-1f216f9a44cd
      iscommand: false
      name: Done
      type: title
      version: -1
      description: ''
    taskid: 194aaf0f-782c-41fc-84d8-1f216f9a44cd
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 450,
          "y": 680
        }
      }
  "3":
    id: "3"
    ignoreworker: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      PcapEntryID:
        simple: ${PcapDetails.EntryID}
      RegistryEntryId:
        simple: ${RegistryDetails.EntryID}
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: This playbook allows the user to analyze forensic evidence acquired
        from a host. Such as registry files, memory dump files or PCAP files.
      id: 72dbc757-02eb-4596-867b-7afc22403afa
      iscommand: false
      name: Forensics Tools Analysis
      playbookId: Forensics Tools Analysis
      type: playbook
      version: -1
    taskid: 72dbc757-02eb-4596-867b-7afc22403afa
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 450,
          "y": 460
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 695,
        "width": 380,
        "x": 450,
        "y": 50
      }
    }
  }
inputs:
- key: Host
  value: {}
  required: false
  description: The host name for which to export the registry file. For example testpc01
  playbookInputQuery: null
outputs: []
tests:
- No tests (auto formatted)
fromversion: 6.0.0
